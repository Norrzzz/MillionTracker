const app_Main=new Vue({el:"#app",mixins:[Utils],data:{priceChart:null,holderChart:null,dataForXDays:7,holders:[],monthlyHolders:[],prices:[],ranks:null,search:"",searchError:null,socials:[],stats:null,top100:[],top1000:[],searchResult:[]},methods:{initPriceChart(update){let self=this,minPrice=Math.min.apply(null,this.holders.map((function(a){return a.price})));minPrice>1&&(minPrice=Math.floor(minPrice));const data={datasets:[{label:"Price",data:self.prices,backgroundColor:"#cf022bBA",borderColor:"#cf022bCA",borderWidth:1,parsing:{xAxisKey:"time",yAxisKey:"price"},pointStyle:"circle",pointRadius:.2,hoverRadius:3}]},config={type:"line",data:data,options:{animation:!1,interaction:{intersect:!1,mode:"nearest"},plugins:{legend:{display:!1},tooltip:{callbacks:{label:tooltipItem=>{switch(tooltipItem.dataset.label){case"Price":return"Price: $"+tooltipItem.formattedValue}}},position:"nearest"},zoom:{pan:{enabled:!0,mode:"x"},zoom:{wheel:{enabled:!0},pinch:{enabled:!0},mode:"x"},limits:{x:{min:"original",max:"original"},y:{min:"original",max:"original"}}}},responsive:!0,scales:{x:{type:"time",time:{minUnit:"day",tooltipFormat:"ll HH:mm",displayFormats:{day:"MMM DD"}},title:{display:!0,text:"Time (UTC)"}},y:{ticks:{callback:function(value,index,values){return"$"+value}},min:minPrice}}}};if(!0===update){switch(self.priceChart.data=data,this.dataForXDays){case 1:self.priceChart.options.scales.x.time.minUnit="hour";break;default:self.priceChart.options.scales.x.time.minUnit="day"}self.priceChart.options.scales.y.min=minPrice,self.priceChart.update(),self.priceChart.resetZoom()}else self.priceChart=new Chart(document.getElementById("pricegraph"),config)},initHolderChart(update){let self=this,minHolders=0;const data={datasets:[{label:"Total",data:self.holders,backgroundColor:"#28a745",borderColor:"#28a745",borderWidth:1,parsing:{xAxisKey:"time",yAxisKey:"total"},pointStyle:"circle",pointRadius:.2,hoverRadius:3,fill:{target:1,above:"rgba(40, 167, 69, 0.5)",below:"rgba(40, 167, 69, 0.5)"}},{label:"Eth",data:self.holders,backgroundColor:"#457b9d",borderColor:"#457b9d",borderWidth:1,parsing:{xAxisKey:"time",yAxisKey:"eth"},pointStyle:"circle",pointRadius:.2,hoverRadius:3,fill:{target:2,above:"rgba(69, 123, 157, 0.5)",below:"rgba(69, 123, 157, 0.5)"}},{label:"Bsc",data:self.holders,backgroundColor:"#ffc107",borderColor:"#ffc107",borderWidth:1,parsing:{xAxisKey:"time",yAxisKey:"bsc"},pointStyle:"circle",pointRadius:.2,hoverRadius:3,fill:{target:"start",above:"rgba(255, 193, 7, 0.5)",below:"rgba(255, 193, 7, 0.5)"}}]},config={type:"line",data:data,options:{animation:!1,interaction:{intersect:!1,mode:"index"},plugins:{legend:{display:!1},tooltip:{callbacks:{label:tooltipItem=>tooltipItem.dataset.label+": "+tooltipItem.formattedValue+"K"},position:"nearest"},zoom:{pan:{enabled:!0,mode:"x"},zoom:{wheel:{enabled:!0},pinch:{enabled:!0},mode:"x"},limits:{x:{min:"original",max:"original"},y:{min:"original",max:"original"}}}},responsive:!0,scales:{x:{type:"time",time:{minUnit:"day",tooltipFormat:"ll HH:mm",displayFormats:{day:"MMM DD"}},title:{display:!0,text:"Time (UTC)"}},y:{ticks:{callback:function(value,index,values){return value+"K"}},min:0}}}};if(!0===update){switch(self.holderChart.data=data,this.dataForXDays){case 1:self.holderChart.options.scales.x.time.minUnit="hour";break;default:self.holderChart.options.scales.x.time.minUnit="day"}self.holderChart.options.scales.y.min=0,self.holderChart.update(),self.holderChart.resetZoom()}else self.holderChart=new Chart(document.getElementById("holdergraph"),config)},async getTop1000(){let self=this;try{await api.getTop100().then(response=>{self.top100=response.slice(0,100),self.top1000=response,""===self.search&&(self.searchResult=self.top100)})}catch(e){console.log(e)}},async getHolders(days){let self=this;try{await api.getHolders(days).then(response=>{response.forEach(element=>{element.time=new Date(element.time),element.total=element.total/1e3,element.eth=element.eth/1e3,element.bsc=element.bsc/1e3}),self.holders=response})}catch(e){console.log(e)}},async getSocials(days){let self=this;try{await api.getSocials(days).then(response=>{response.forEach(element=>{element.time=new Date(element.time)}),self.socials=response})}catch(e){console.log(e)}},async getMonthlyHolders(){let self=this;try{await api.getHolders(30).then(response=>{response.forEach(element=>{element.time=new Date(element.time),element.total=element.total/1e3,element.eth=element.eth/1e3,element.bsc=element.bsc/1e3}),self.monthlyHolders=response})}catch(e){console.log(e)}},async getPrice(days){let self=this;try{await api.getPrice(days).then(response=>{response.forEach(element=>{element.time=new Date(element.time)}),self.prices=response})}catch(e){console.log(e)}},async getStats(){let self=this;try{await api.getStats().then(response=>{self.stats=response[0],self.stats.volume1d=Math.round(Number(self.stats.volume1d)),self.stats.volume7d=Math.round(Number(self.stats.volume7d)),self.stats.volume30d=Math.round(Number(self.stats.volume30d))}),document.title="$"+self.stats.price+" | Million Tracker"}catch(e){console.log(e)}},async getRanks(){let self=this;try{await api.getRanks().then(response=>{self.ranks=response[0]})}catch(e){console.log(e)}},async init(){await this.getMonthlyHolders(),await this.getHolders(this.dataForXDays),await this.getPrice(this.dataForXDays),await this.getStats(),await this.getRanks(),await this.getSocials(this.dataForXDays),null==this.priceChart?this.initPriceChart():this.initPriceChart(!0),null==this.holderChart?this.initHolderChart():this.initHolderChart(!0),await this.getTop1000()},performSearch(){if(this.notNullEmptyOrUndefined(this.search)&&this.top1000.length>0){let result=this.top1000.filter(e=>e.address.toLowerCase().startsWith(this.search.toLowerCase().trim()));this.notNullEmptyOrUndefined(result)?(this.searchError=null,this.searchResult=result):(this.searchResult=[],this.searchError="Found no addresses starting with '"+this.search+"' among top 1000 addresses.")}else""===this.search&&(this.searchResult=this.top100)}},computed:{price1h:function(){if(this.prices.length>0){let oneHourAgo=this.addDate(this.getUTCDate(new Date),-1,"hour"),pastPrice=this.prices.find(day=>day.time>oneHourAgo),currentPrice=this.prices[this.prices.length-1];return this.notNullEmptyOrUndefined(pastPrice)&&this.notNullEmptyOrUndefined(currentPrice)?this.showTwoDecimals(currentPrice.price/pastPrice.price*100-100):0}},mcap:function(){if(null!=this.stats){var mcap=this.stats.marketcap/1e6;return this.showTwoDecimals(mcap)}},holders1h:function(){if(this.holders.length>0&&this.monthlyHolders.length>0){let oneHourAgo=this.addDate(this.getUTCDate(new Date),-1,"hour"),pastHolders=this.monthlyHolders.find(day=>day.time>oneHourAgo).total,currentHolders=this.monthlyHolders[this.monthlyHolders.length-1].total;return this.showTwoDecimals(currentHolders/pastHolders*100-100)}},holders1d:function(){if(this.holders.length>0&&this.monthlyHolders.length>0){let yesterday=this.addDate(this.getUTCDate(new Date),-1,"day"),pastHolders=this.monthlyHolders.find(day=>day.time>yesterday).total,currentHolders=this.monthlyHolders[this.monthlyHolders.length-1].total;return this.showTwoDecimals(currentHolders/pastHolders*100-100)}},holders7d:function(){if(this.holders.length>0&&this.monthlyHolders.length>0){let weekago=this.addDate(this.getUTCDate(new Date),-7,"day"),pastHolders=this.monthlyHolders.find(day=>day.time>weekago).total,currentHolders=this.monthlyHolders[this.monthlyHolders.length-1].total;return this.showTwoDecimals(currentHolders/pastHolders*100-100)}},holders30d:function(){if(this.holders.length>0&&this.monthlyHolders.length>0){let monthago=this.addDate(this.getUTCDate(new Date),-30,"day"),pastHolders=this.monthlyHolders.find(day=>day.time>monthago).total,currentHolders=this.monthlyHolders[this.monthlyHolders.length-1].total;return this.showTwoDecimals(currentHolders/pastHolders*100-100)}},volume1d:function(){if(null!=this.stats){var vol=this.stats.volume1d/1e6;return this.showTwoDecimals(vol)}},volume7d:function(){if(null!=this.stats){var vol=this.stats.volume7d/1e6;return this.showTwoDecimals(vol)}},volume30d:function(){if(null!=this.stats){var vol=this.stats.volume30d/1e6;return this.showTwoDecimals(vol)}},price1d:function(){if(null!=this.stats)return this.showTwoDecimals(100*this.stats.price1dpct)},price7d:function(){if(null!=this.stats)return this.showTwoDecimals(100*this.stats.price7dpct)},price30d:function(){if(null!=this.stats)return this.showTwoDecimals(100*this.stats.price30dpct)},top10pct:function(){if(this.top100.length>0){let pct=0;return this.top100.filter(e=>e.rank<=10).forEach(o=>{pct+=parseFloat(o.percentage)}),pct.toFixed(2)}},top100pct:function(){if(this.top100.length>0){let pct=0;return this.top100.forEach(o=>{pct+=parseFloat(o.percentage)}),pct.toFixed(2)}},top100Unipct:function(){if(this.top100.length>0){let pct=0;return this.top100.filter(e=>e.address.indexOf("Uniswap")>=0).forEach(o=>{pct+=parseFloat(o.percentage)}),pct.toFixed(2)}},top100Bscpct:function(){if(this.top100.length>0){let pct=0;return this.top100.filter(e=>e.address.indexOf("AnySwap: BSC Bridge")>=0).forEach(o=>{pct+=parseFloat(o.percentage)}),pct.toFixed(2)}},top100OrdinaryWalletsPct:function(){if(this.top100.length>0){let pct=0;return this.top100.filter(e=>e.address.indexOf("AnySwap: BSC Bridge")<0&&e.address.indexOf("Uniswap")<0).forEach(o=>{pct+=parseFloat(o.percentage)}),pct.toFixed(2)}},community:function(){if(this.socials.length>0)return this.socials[this.socials.length-1]}},created(){},mounted(){this.init(),setInterval(this.getStats,6e4)}});